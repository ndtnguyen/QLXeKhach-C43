@model C43QLXeKhach.Models.CHUYENXE

@{
    ViewBag.Title = "Thêm Chuyến Xe";
}

<h2>Thêm Chuyến Xe</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CHUYENXE</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2">
                <label>Ngày khởi hành</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayKH, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.NgayKH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Ngày đến</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayDen, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.NgayDen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Mã tuyến</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaTuyen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaTuyen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Mã xe</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaXe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaXe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Mã tài xế</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaTX, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaTX, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(function () {
        var bindDatePicker = function () {
            $(".date").datetimepicker({
                format: 'YYYY-MM-DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            }).find('input:first').on("blur", function () {
                // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                // update the format if it's yyyy-mm-dd
                var date = parseDate($(this).val());

                if (!isValidDate(date)) {
                    //create date based on momentjs (we have that)
                    date = moment().format('YYYY-MM-DD');
                }

                $(this).val(date);
            });
        }

        var isValidDate = function (value, format) {
            format = format || false;
            // lets parse the date to the best of our knowledge
            if (format) {
                value = parseDate(value);
            }

            var timestamp = Date.parse(value);

            return isNaN(timestamp) == false;
        }

        var parseDate = function (value) {
            var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
            if (m)
                value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

            return value;
        }

        bindDatePicker();
    });
    </script>
}


