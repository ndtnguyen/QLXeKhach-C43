@model C43QLXeKhach.Models.KHACHHANG

@{
    ViewBag.Title = "Cập Nhật Khách Hàng";
}

<h2>Cập Nhật Khách Hàng</h2>


@using (Html.BeginForm("Edit", "KHACHHANGs", FormMethod.Post, new { id = "khachhangEdit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaKH)

        <div class="form-group">
            <div class="col-md-2">
                <label>Tên KH</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenKH, new { htmlAttributes = new { @class = "form-control", @id = "tenKH" } })
                <div id="tenKHError" class="text-danger" hidden>Vui lòng nhập họ tên</div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>SĐT</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control", @id = "SDT" } })
                <div id="SDTError" class="text-danger" hidden>Vui lòng nhập số điện thoại</div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>CMND</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CMND, new { htmlAttributes = new { @class = "form-control", @id = "CMND" } })
                <div id="CMNDError" class="text-danger" hidden>Vui lòng nhập số điện thoại</div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Địa Chỉ</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-2">
                <label>Ngày Sinh</label>
            </div>

            <div class="col-md-10">

                <div class='date' id='datetimepicker'>
                    @if (Model.NgaySinh != null)
                    {
                        <input class="form-control date text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgaySinh" name="NgaySinh" type="datetime" value="@Model.NgaySinh.Value.ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        <input class="form-control date text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgaySinh" name="NgaySinh" type="datetime" value="@Model.NgaySinh" />
                        @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Email</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="edit" value="Cập Nhật" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <button class="btn btn-danger" id="btnDelete" title="index" onclick="location.href='@Url.Action("Index", "KHACHHANGs")'">
        Quay trở lại
        @*<span class="glyphicon glyphicon-remove"></span>*@
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
<script type="text/javascript">
    $(function () {
        var bindDatePicker = function () {
            $(".date").datetimepicker({
                format: 'YYYY-MM-DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            }).find('input:first').on("blur", function () {
                // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                // update the format if it's yyyy-mm-dd
                var date = parseDate($(this).val());

                if (!isValidDate(date)) {
                    //create date based on momentjs (we have that)
                    date = moment().format('YYYY-MM-DD');
                }

                $(this).val(date);
            });
        }

        var isValidDate = function (value, format) {
            format = format || false;
            // lets parse the date to the best of our knowledge
            if (format) {
                value = parseDate(value);
            }

            var timestamp = Date.parse(value);

            return isNaN(timestamp) == false;
        }

        var parseDate = function (value) {
            var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
            if (m)
                value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

            return value;
        }

        bindDatePicker();
    });
    $(document).ready(function () {
        $('#edit').on('click', function () {

            let isError = false;
            var tenKH = $("#tenKH").val();
            var SDT = $("#SDT").val();
            var CMND = $("#CMND").val();
            if (tenKH.length == 0) {
                $("#tenKHError").show();
                isError = true;
            }
            if (SDT.length == 0) {
                $("#SDTError").show();
                isError = true;
            }
            if (CMND.length == 0) {
                $("#CMNDError").show();
                isError = true;
            }
            console.log(isError);
            if (!isError) {
                $("#tenKHError").hide()
                $("#SDTError").hide();
                $("#CMNDError").hide();
                $("#khachhangEdit").submit();
            } else {
                return;
            }
        });
    });
</script>
}
