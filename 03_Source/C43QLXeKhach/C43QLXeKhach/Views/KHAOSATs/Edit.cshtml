@model C43QLXeKhach.Models.KHAOSAT

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center">SỬA THÔNG TIN KHẢO SÁT</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaKS)

        <div class="form-group">
            <div class="control-label col-md-5">
                Ngày khảo sát
            </div>
            <div class="col-md-7">
                <div class='date' id='datetimepicker'>
                    <input class="form-control date text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgayKS" name="NgayKS" type="datetime" value="@Model.NgayKS.Value.ToString("yyyy-MM-dd")" />
                    @Html.ValidationMessageFor(model => model.NgayKS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-5">
                Người khảo sát
            </div>
            <div class="col-md-7">
                @Html.DropDownList("nhanVienDropList", (List<SelectListItem>)ViewBag.listItems, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NguoiKS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-5">
                Địa chỉ khảo sát
            </div>
            <div class="col-md-7">
                <textarea class="form-control" data-val="true" rows="3" id="DiaChiKS" name="DiaChiKS" type="text" value="@Model.DiaChiKS">@Model.DiaChiKS</textarea>
                @*@Html.EditorFor(model => model.DiaChiKS, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DiaChiKS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-5">
                Tỉ lệ đón khách
            </div>
            <div class="col-md-7">
                @Html.EditorFor(model => model.TiLeDonKhach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TiLeDonKhach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-5">
                Giá khảo sát
            </div>
            <div class="col-md-7">
                @Html.EditorFor(model => model.GiaKS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaKS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-5 col-md-7">
                <input type="submit" value="Lưu thông tin" class="btn btn-success text-center" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
        var bindDatePicker = function () {
            $(".date").datetimepicker({
                format: 'YYYY-MM-DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            }).find('input:first').on("blur", function () {
                // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                // update the format if it's yyyy-mm-dd
                var date = parseDate($(this).val());

                if (!isValidDate(date)) {
                    //create date based on momentjs (we have that)
                    date = moment().format('YYYY-MM-DD');
                }

                $(this).val(date);
            });
        }

        var isValidDate = function (value, format) {
            format = format || false;
            // lets parse the date to the best of our knowledge
            if (format) {
                value = parseDate(value);
            }

            var timestamp = Date.parse(value);

            return isNaN(timestamp) == false;
        }

        var parseDate = function (value) {
            var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
            if (m)
                value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

            return value;
        }

        bindDatePicker();
    });
</script>
}
