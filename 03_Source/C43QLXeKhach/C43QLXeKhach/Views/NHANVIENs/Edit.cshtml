@model C43QLXeKhach.Models.NHANVIEN

@{
    ViewBag.Title = "Cập Nhật Nhân Viên";
}

<h2>Cập Nhật Nhân Viên</h2>


<form action="/NHANVIENs/Edit" method="post" id="frmEdit">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaNV)

        <div class="form-group">
            <div class="col-md-2">
                <label>Tên NV</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenNV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenNV, "", new { @class = "text-danger", @id = "errTenNV" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>CMND</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CMND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CMND, "", new { @class = "text-danger", @id = "errCMND" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-2">
                <label>Ngày Sinh</label>
            </div>

            <div class="col-md-10">

                <div class='date' id='datetimepicker'>
                    @if (Model.NgaySinh != null)
                    {
                        <input class="form-control date text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgaySinh" name="NgaySinh" type="datetime" value="@Model.NgaySinh.Value.ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger", @id = "errNgaySinh" })
                    }
                    else
                    {
                        <input class="form-control date text-box single-line" data-val="true" data-val-date="The field NgaySinh must be a date." id="NgaySinh" name="NgaySinh" type="datetime" value="@Model.NgaySinh" />
                        @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger", @id = "errNgaySinh" })
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Địa Chỉ</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger", @id = "errDiaChi" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>SĐT</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger", @id = "errSDT" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                <label>Email</label>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
  </form>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <button class="btn btn-success" id="btn_submit">Cập Nhật</button>
    </div>
</div>
<p>
    <button class="btn btn-danger" title="delete" onclick="location.href='@Url.Action("Index", "NHANVIENs")'">Quay Trở Lại</button>
</p>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            $("#btn_submit").on('click', function () {
                if(!validate()){
                    return;
                }
                $("#frmEdit").submit();
            });
            $(function () {
                var bindDatePicker = function () {
                    $(".date").datetimepicker({
                        format: 'YYYY-MM-DD',
                        icons: {
                            time: "fa fa-clock-o",
                            date: "fa fa-calendar",
                            up: "fa fa-arrow-up",
                            down: "fa fa-arrow-down"
                        }
                    }).find('input:first').on("blur", function () {
                        // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                        // update the format if it's yyyy-mm-dd
                        var date = parseDate($(this).val());

                        if (!isValidDate(date)) {
                            //create date based on momentjs (we have that)
                            date = moment().format('YYYY-MM-DD');
                        }

                        $(this).val(date);
                    });
                }

                var isValidDate = function (value, format) {
                    format = format || false;
                    // lets parse the date to the best of our knowledge
                    if (format) {
                        value = parseDate(value);
                    }

                    var timestamp = Date.parse(value);

                    return isNaN(timestamp) == false;
                }

                var parseDate = function (value) {
                    var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
                    if (m)
                        value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

                    return value;
                }

                bindDatePicker();
            });
            function validate(){
                var tennv=$("#TenNV").val(),
                    cmnd=$("#CMND").val(),
                    ngaysinh=$("#NgaySinh").val(),
                    diachi=$("#DiaChi").val(),
                    sdt=$("#SDT").val();
                if(tennv==""){
                    $("#errTenNV").text("Tên nhân viên là bắt buộc");
                    return false;
                }
                else
                    $("#errTenNV").text("");
                if(cmnd==""){
                    $("#errCMND").text("CMND là bắt buộc");
                    return false;
                }
                else
                    $("#errCMND").text("");
                if(ngaysinh==""){
                    $("#errNgaySinh").text("Ngày sinh là bắt buộc");
                    return false;
                }
                else
                    $("#errNgaySinh").text("");
                if(diachi==""){
                    $("#errDiaChi").text("Địa chỉ là bắt buộc");
                    return false;
                }
                else
                    $("#errDiaChi").text("");
                if(sdt==""){
                    $("#errSDT").text("Số điện thoại là bắt buộc");
                    return false;
                }
                else
                    $("#errSDT").text("");
                return true;
            }
        </script>
    }
